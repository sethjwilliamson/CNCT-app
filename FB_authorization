using System;
using System.Web;
using System.Web.UI;
using System.Net;
using System.Linq;
using System.Collections.Generic;
using System.Web.UI.WebControls;

using Facebook;

namespace Application
{

    public partial class facebook : System.Web.UI.Page
    {
        CheckAuthorization();
    }
    private void CheckAuthorization()
    {
        string app_id = "2951294864884264";
        string app_secret = "c9bfe5c3441cf1f9824760d910ebec05";
        string scope = "publish_stream,manage_pages";


        if (Request["code"] == null) {
            Response.Redirect(string.Format(
                "https://graph.facebook.com/oauth/authorize?client_id={0}&redirect_url={1}&scope={2}",
                app_id, Request.Url.AbsoluteUri, scope));
        }
        else {
            Dictionary<string, string> tokens = new Dictionary<string, string>();

            string url = string.Format("https://graph.facebook.com/oauth/authorize?client_id={0}&redirect_url={1}&scope={2}&code={3}&client_secret={4}",
                app_id, Request.Url.AbsoluteUri, scope, Request["code"].ToString(), app_secret);

            HttpWebRequest request = WebRequest.Create(url) as HttpWebRequest;

            using (HttpWebResponse response = request.GetResponse() as HttpWebResponse){
                StreamReader reader = new StreamReader(response.GetResponseStream());

                string vals = reader.ReadToEnd();

                foreach(string token in vals.Split('&')){
                    tokens.Add(token.Substring(0, token.IndexOf("=")),
                        token.Substring(token.IndexOf("=") + 1, token.Length - token.IndexOf("=") - 1));
                }

            
            
            }
            //access tokens dont expire
            string access_token = tokens["access_token"];


            var client = new FacebookClient(access_token);
            client.Post("/me/feed", new { message = "markhagan.me video turtorial" });







   
     }


    }
}
